class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int, vector<int>,greater<int>>minheap;
        
        //step 1 
        //make a min heap of size k from  i=0 to k-1
        for(int i=0;i<k;i++){
            minheap.push(nums[i]);
        }

        //step 2
        //for remaining elements in vector run loop
        int n=nums.size();
        for(int i=k;i<n;i++){
            if(nums[i]>minheap.top())
            {
                minheap.pop();
                minheap.push(nums[i]);
            }
        }
        //step 3
        int ans=minheap.top();
        return ans;
    }
};
